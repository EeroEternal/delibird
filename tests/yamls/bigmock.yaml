# mock data workflow

# workflow lists
mocks:
  - name: "mock-to-directory"
    row-number: 20480000
    direction: "directory" # directory ,file or  table
    directory: "./datasets/mock_data/mock_stocks"
    partition-cols: ["sec_code"]
    columns: {
                # stock code as a type
                "sec_code": "code",  # "600001"
                "date": "date",  # 2022-08-24
                "close": "float",  # 16.87
                "open": "float",  # 16.65
                "high": "float",  # 16.95
                "low": "float",  # 16.55
                "hold": "decimal(10,5)",  # 123.25515
                # datetime.datetime(2022,10,25).timestamp()
                "time": "timestample(unit=s,tz=Asia/Shanghai)",
                "volume": "int",  # 1530231
                "amount": "int",  # 2571196416
            }

  # - name: "mock-to-table"
  #   row-number: 20480000
  #   direction: "table" # directory ,file or table
  #   dsn: "postgresql://test:test123@localhost:5432/delibird"
  #   table-name: "mock_stocks"
  #   columns: {
  #               # stock code as a type
  #               "sec_code": "code",  # "600001"
  #               "date": "date",  # 2022-08-24
  #               "close": "float",  # 16.87
  #               "open": "float",  # 16.65
  #               "high": "float",  # 16.95
  #               "low": "float",  # 16.55
  #               "hold": "decimal(10,5)",  # 123.25515
  #               # datetime.datetime(2022,10,25).timestamp()
  #               "time": "timestample(unit=s,tz=Asia/Shanghai)",
  #               "volume": "int",  # 1530231
  #               "amount": "int",  # 2571196416
  #           }

  # - name: "mock-to-table"
  #   row-number: 204800
  #   direction: "file" # directory, file or table
  #   dsn: "postgresql://test:test123@localhost:5432/delibird"
  #   filepath: "./datasets/mock_data/mock_stocks.parquet"
  #   columns: {
  #               # stock code as a type
  #               "sec_code": "code",  # "600001"
  #               "date": "date",  # 2022-08-24
  #               "close": "float",  # 16.87
  #               "open": "float",  # 16.65
  #               "high": "float",  # 16.95
  #               "low": "float",  # 16.55
  #               "hold": "decimal(10,5)",  # 123.25515
  #               # datetime.datetime(2022,10,25).timestamp()
  #               "time": "timestample(unit=s,tz=Asia/Shanghai)",
  #               "volume": "int",  # 1530231
  #               "amount": "int",  # 2571196416
  #           }

